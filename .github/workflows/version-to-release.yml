name: Auto tag-release-publish

on:
  push:
    branches:
      - master
  pull_request:
    branches: [ master ]

jobs:
  debug0:
    name: debug first step
    runs-on: ubuntu-latest
    steps:
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJSON(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJSON(steps) }}
        run: echo "$STEPS_CONTEXT"


  tag:
    name: Create tag for new version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - uses: salsify/action-detect-and-tag-new-version@v2
        id: create_new_version_tag

  debug:
    name: debug flow
    runs-on: ubuntu-latest
    needs: debug0
    if: needs.debug0.steps.hi_hi.outputs
    steps:
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJSON(job) }}
        run: echo "$JOB_CONTEXT"
        id: hi_hi
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJSON(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump needs context
        env:
          STEPS_CONTEXT: ${{ toJSON(needs) }}
        run: echo "$STEPS_CONTEXT"

  release:
    name: Create release
    runs-on: ubuntu-latest
    needs: tag
    if: needs.tag.steps.create_new_version_tag.outputs.tag
    steps:
      - uses: actions/checkout@v2
      - uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.tag.steps.create_new_version_tag.outputs.tag }}
          release_name: ${{ needs.tag.steps.create_new_version_tag.outputs.tag }}
          draft: false
          prerelease: false

  publish:
    name: Build and publish
    runs-on: ubuntu-latest
    needs: tag
    if: needs.tag.steps.create_new_version_tag.outputs.tag
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14.x'
          registry-url: 'https://registry.npmjs.org'
      - run: yarn
      - run: yarn build
      - run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
